use std::collections::HashMap;


#[derive(Debug, serde::Deserialize, serde::Serialize)]
pub enum GCodeMethod {
    /// This endpoint allows one to query available G-Code commands that have a help string defined
    Help,
    /// If the provided G-Code script raises an error, then an error response is generated. However, if the G-Code command produces terminal output, that terminal output is not provided in the response. (Use the "gcode/subscribe_output" endpoint to obtain G-Code terminal output.)
    /// If there is a G-Code command being processed when this request is received, then the provided script will be queued. This delay could be significant (eg, if a G-Code wait for temperature command is running). The JSON response message is sent when the processing of the script fully completes.
    Script { script: String },
    /// This endpoint allows one to request a restart - it is similar to running the G-Code "RESTART" command.
    /// As with the "gcode/script" endpoint, this endpoint only completes after any pending G-Code commands complete.
    Restart,
    /// This is similar to the "gcode/restart" endpoint - it implements the G-Code "FIRMWARE_RESTART" command. For example: {"id": 123, "method": "gcode/firmware_restart"}
    /// As with the "gcode/script" endpoint, this endpoint only completes after any pending G-Code commands complete.
    FirmwareRestart,
    /// This endpoint is used to subscribe to G-Code terminal messages that are generated by Klipper.
    /// This endpoint is intended to support human interaction via a "terminal window" interface. Parsing content from the G-Code terminal output is discouraged. Use the "objects/subscribe" endpoint to obtain updates on Klipper's state.
    SubscribeOutput,
}

#[derive(Debug, serde::Deserialize, serde::Serialize)]
pub enum ReportMethod {
    /// This endpoint is used to subscribe to Klipper's internal stepper queue_step command stream for a stepper. Obtaining these low-level motion updates may be useful for diagnostic and debugging purposes. Using this endpoint may increase Klipper's system load.
    /// TODO: refisit reference docs. some detail is missing
    DumpStepper,
    /// Subscribe to Klipper's internal "trapezoid motion queue". Obtaining these low-level motion updates may be useful for diagnostic and debugging purposes. Using this endpoint may increase Klipper's system load.
    /// TODO: refisit reference docs. some detail is missing
    DumpTrapq,
    /// Subscribe to ADXL345 accelerometer data. Obtaining these low-level motion updates may be useful for diagnostic and debugging purposes. Using this endpoint may increase Klipper's system load.
    /// TODO: refisit reference docs. some detail is missing
    DumpAdxl345,
    /// Subscribe to angle sensor data. Obtaining these low-level motion updates may be useful for diagnostic and debugging purposes. Using this endpoint may increase Klipper's system load.
    /// TODO: refisit reference docs. some detail is missing
    DumpAngle,
    /// Queries active endpoints to get status.
    /// As with the "gcode/script" endpoint, this endpoint only completes after any pending G-Code commands complete.
    QueryEndstopStatus,
}

#[derive(Debug, serde::Deserialize, serde::Serialize)]
pub enum ObjectsMethod {
    /// Obtain the list of available printer "objects" that one may query
    List,
    // Query(HashMap<objects::StatusReferenceObjects, Vec<String>>),
    // Subscribe(HashMap<objects::StatusReferenceObjects, Vec<String>>),
}
#[derive(Debug, serde::Deserialize, serde::Serialize)]
pub enum StatusMethod {
    /// Clients are encouraged to provide the name of the client and its software version when first connecting to the Klipper API server. 
    Info(Option<HashMap<String, String>>),
    /// Uused to instruct Klipper to transition to a "shutdown" state. It behaves similarly to the G-Code M112 command.
    EStop,
    /// Similar to running the "PRINT_CANCEL" G-Code command.
    /// As with the "gcode/script" endpoint, this endpoint only completes after any pending G-Code commands complete.
    Cancel,
    /// Similar to running the "PAUSE" G-Code command.
    /// As with the "gcode/script" endpoint, this endpoint only completes after any pending G-Code commands complete.
    Pause,
    /// Similar to running the "RESUME" G-Code command.
    /// As with the "gcode/script" endpoint, this endpoint only completes after any pending G-Code commands complete.
    Resume,
}
